// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chain/nom/protobuf.proto

/*
Package nom is a generated protocol buffer package.

It is generated from these files:
	chain/nom/protobuf.proto

It has these top-level messages:
	AccountBlockProto
	MomentumProto
*/
package nom

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/zenon-network/go-zenon/common/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountBlockProto struct {
	Version              uint64                 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ChainIdentifier      uint64                 `protobuf:"varint,2,opt,name=chainIdentifier" json:"chainIdentifier,omitempty"`
	BlockType            uint64                 `protobuf:"varint,3,opt,name=blockType" json:"blockType,omitempty"`
	Hash                 *types.HashProto       `protobuf:"bytes,4,opt,name=hash" json:"hash,omitempty"`
	PreviousHash         *types.HashProto       `protobuf:"bytes,5,opt,name=previousHash" json:"previousHash,omitempty"`
	Height               uint64                 `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
	MomentumAcknowledged *types.HashHeightProto `protobuf:"bytes,7,opt,name=momentumAcknowledged" json:"momentumAcknowledged,omitempty"`
	Address              *types.AddressProto    `protobuf:"bytes,8,opt,name=address" json:"address,omitempty"`
	ToAddress            *types.AddressProto    `protobuf:"bytes,9,opt,name=toAddress" json:"toAddress,omitempty"`
	Amount               []byte                 `protobuf:"bytes,10,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenStandard        []byte                 `protobuf:"bytes,11,opt,name=tokenStandard,proto3" json:"tokenStandard,omitempty"`
	FromBlockHash        *types.HashProto       `protobuf:"bytes,12,opt,name=fromBlockHash" json:"fromBlockHash,omitempty"`
	DescendantBlocks     []*AccountBlockProto   `protobuf:"bytes,13,rep,name=descendantBlocks" json:"descendantBlocks,omitempty"`
	Data                 []byte                 `protobuf:"bytes,14,opt,name=data,proto3" json:"data,omitempty"`
	FusedPlasma          uint64                 `protobuf:"varint,15,opt,name=fusedPlasma" json:"fusedPlasma,omitempty"`
	Difficulty           uint64                 `protobuf:"varint,17,opt,name=difficulty" json:"difficulty,omitempty"`
	Nonce                []byte                 `protobuf:"bytes,18,opt,name=nonce,proto3" json:"nonce,omitempty"`
	BasePlasma           uint64                 `protobuf:"varint,19,opt,name=basePlasma" json:"basePlasma,omitempty"`
	TotalPlasma          uint64                 `protobuf:"varint,20,opt,name=totalPlasma" json:"totalPlasma,omitempty"`
	ChangesHash          *types.HashProto       `protobuf:"bytes,21,opt,name=changesHash" json:"changesHash,omitempty"`
	PublicKey            []byte                 `protobuf:"bytes,22,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Signature            []byte                 `protobuf:"bytes,23,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *AccountBlockProto) Reset()                    { *m = AccountBlockProto{} }
func (m *AccountBlockProto) String() string            { return proto.CompactTextString(m) }
func (*AccountBlockProto) ProtoMessage()               {}
func (*AccountBlockProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccountBlockProto) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *AccountBlockProto) GetChainIdentifier() uint64 {
	if m != nil {
		return m.ChainIdentifier
	}
	return 0
}

func (m *AccountBlockProto) GetBlockType() uint64 {
	if m != nil {
		return m.BlockType
	}
	return 0
}

func (m *AccountBlockProto) GetHash() *types.HashProto {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *AccountBlockProto) GetPreviousHash() *types.HashProto {
	if m != nil {
		return m.PreviousHash
	}
	return nil
}

func (m *AccountBlockProto) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *AccountBlockProto) GetMomentumAcknowledged() *types.HashHeightProto {
	if m != nil {
		return m.MomentumAcknowledged
	}
	return nil
}

func (m *AccountBlockProto) GetAddress() *types.AddressProto {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *AccountBlockProto) GetToAddress() *types.AddressProto {
	if m != nil {
		return m.ToAddress
	}
	return nil
}

func (m *AccountBlockProto) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *AccountBlockProto) GetTokenStandard() []byte {
	if m != nil {
		return m.TokenStandard
	}
	return nil
}

func (m *AccountBlockProto) GetFromBlockHash() *types.HashProto {
	if m != nil {
		return m.FromBlockHash
	}
	return nil
}

func (m *AccountBlockProto) GetDescendantBlocks() []*AccountBlockProto {
	if m != nil {
		return m.DescendantBlocks
	}
	return nil
}

func (m *AccountBlockProto) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AccountBlockProto) GetFusedPlasma() uint64 {
	if m != nil {
		return m.FusedPlasma
	}
	return 0
}

func (m *AccountBlockProto) GetDifficulty() uint64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *AccountBlockProto) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *AccountBlockProto) GetBasePlasma() uint64 {
	if m != nil {
		return m.BasePlasma
	}
	return 0
}

func (m *AccountBlockProto) GetTotalPlasma() uint64 {
	if m != nil {
		return m.TotalPlasma
	}
	return 0
}

func (m *AccountBlockProto) GetChangesHash() *types.HashProto {
	if m != nil {
		return m.ChangesHash
	}
	return nil
}

func (m *AccountBlockProto) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *AccountBlockProto) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type MomentumProto struct {
	Version         uint64                      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ChainIdentifier uint64                      `protobuf:"varint,2,opt,name=chainIdentifier" json:"chainIdentifier,omitempty"`
	Hash            *types.HashProto            `protobuf:"bytes,3,opt,name=hash" json:"hash,omitempty"`
	PreviousHash    *types.HashProto            `protobuf:"bytes,4,opt,name=previousHash" json:"previousHash,omitempty"`
	Height          uint64                      `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	Timestamp       uint64                      `protobuf:"varint,6,opt,name=timestamp" json:"timestamp,omitempty"`
	Data            []byte                      `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Content         []*types.AccountHeaderProto `protobuf:"bytes,8,rep,name=content" json:"content,omitempty"`
	ChangesHash     *types.HashProto            `protobuf:"bytes,9,opt,name=changesHash" json:"changesHash,omitempty"`
	PublicKey       []byte                      `protobuf:"bytes,10,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Signature       []byte                      `protobuf:"bytes,11,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *MomentumProto) Reset()                    { *m = MomentumProto{} }
func (m *MomentumProto) String() string            { return proto.CompactTextString(m) }
func (*MomentumProto) ProtoMessage()               {}
func (*MomentumProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MomentumProto) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *MomentumProto) GetChainIdentifier() uint64 {
	if m != nil {
		return m.ChainIdentifier
	}
	return 0
}

func (m *MomentumProto) GetHash() *types.HashProto {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *MomentumProto) GetPreviousHash() *types.HashProto {
	if m != nil {
		return m.PreviousHash
	}
	return nil
}

func (m *MomentumProto) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MomentumProto) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MomentumProto) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MomentumProto) GetContent() []*types.AccountHeaderProto {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MomentumProto) GetChangesHash() *types.HashProto {
	if m != nil {
		return m.ChangesHash
	}
	return nil
}

func (m *MomentumProto) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *MomentumProto) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountBlockProto)(nil), "nom.AccountBlockProto")
	proto.RegisterType((*MomentumProto)(nil), "nom.MomentumProto")
}

func init() { proto.RegisterFile("chain/nom/protobuf.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xd1, 0x6e, 0x1a, 0x3b,
	0x10, 0x15, 0x17, 0x02, 0x61, 0x80, 0x9b, 0xc4, 0xa1, 0xd4, 0x6d, 0xa3, 0x0a, 0x45, 0x79, 0xe0,
	0xa5, 0xa0, 0x26, 0x55, 0xdf, 0xc9, 0x13, 0x6d, 0x55, 0x29, 0xa2, 0xfd, 0x01, 0x63, 0xcf, 0xb2,
	0x2b, 0xd6, 0xf6, 0x6a, 0xed, 0x4d, 0xc5, 0xcf, 0xf4, 0x17, 0xfb, 0x0b, 0xd5, 0xce, 0x2e, 0x61,
	0x21, 0xa5, 0x12, 0x52, 0xdf, 0xd6, 0x67, 0xce, 0x19, 0x9b, 0x99, 0x73, 0x00, 0x2e, 0x43, 0x11,
	0x99, 0x89, 0xb1, 0x7a, 0x92, 0xa4, 0xd6, 0xdb, 0x45, 0x16, 0x8c, 0xe9, 0x83, 0xd5, 0x8d, 0xd5,
	0xaf, 0xdf, 0x48, 0xab, 0xb5, 0x35, 0x13, 0xbf, 0x4e, 0xd0, 0xed, 0x31, 0xae, 0x7f, 0x35, 0xe1,
	0x62, 0x2a, 0xa5, 0xcd, 0x8c, 0xbf, 0x8f, 0xad, 0x5c, 0x3d, 0x90, 0x8e, 0x43, 0xeb, 0x11, 0x53,
	0x17, 0x59, 0xc3, 0x6b, 0xc3, 0xda, 0xa8, 0x31, 0xdf, 0x1c, 0xd9, 0x08, 0xce, 0xe8, 0xb6, 0x4f,
	0x0a, 0x8d, 0x8f, 0x82, 0x08, 0x53, 0xfe, 0x1f, 0x31, 0xf6, 0x61, 0x76, 0x05, 0xed, 0x45, 0xde,
	0xf1, 0xfb, 0x3a, 0x41, 0x5e, 0x27, 0xce, 0x16, 0x60, 0x37, 0xd0, 0x08, 0x85, 0x0b, 0x79, 0x63,
	0x58, 0x1b, 0x75, 0x6e, 0xcf, 0xc7, 0xf4, 0xb8, 0xf1, 0x4c, 0xb8, 0x90, 0x5e, 0x30, 0xa7, 0x2a,
	0xfb, 0x00, 0xdd, 0x24, 0xc5, 0xc7, 0xc8, 0x66, 0x2e, 0x2f, 0xf1, 0x93, 0x03, 0xec, 0x1d, 0x16,
	0x1b, 0x40, 0x33, 0xc4, 0x68, 0x19, 0x7a, 0xde, 0xa4, 0x6b, 0xcb, 0x13, 0xfb, 0x0c, 0x7d, 0x6d,
	0x35, 0x1a, 0x9f, 0xe9, 0xa9, 0x5c, 0x19, 0xfb, 0x23, 0x46, 0xb5, 0x44, 0xc5, 0x5b, 0xd4, 0x75,
	0x50, 0xe9, 0x3a, 0x23, 0x41, 0xd1, 0xfb, 0x8f, 0x1a, 0xf6, 0x0e, 0x5a, 0x42, 0xa9, 0x14, 0x9d,
	0xe3, 0xa7, 0x24, 0xbf, 0x2c, 0xe5, 0xd3, 0x02, 0x2d, 0xb4, 0x1b, 0x0e, 0x7b, 0x0f, 0x6d, 0x6f,
	0xcb, 0x12, 0x6f, 0x1f, 0x16, 0x6c, 0x59, 0xf9, 0xaf, 0x10, 0x3a, 0xdf, 0x0b, 0x87, 0x61, 0x6d,
	0xd4, 0x9d, 0x97, 0x27, 0x76, 0x03, 0x3d, 0x6f, 0x57, 0x68, 0xbe, 0x79, 0x61, 0x94, 0x48, 0x15,
	0xef, 0x50, 0x79, 0x17, 0x64, 0x1f, 0xa1, 0x17, 0xa4, 0x56, 0xd3, 0x4e, 0x69, 0x74, 0xdd, 0x03,
	0xa3, 0xdb, 0xa5, 0xb1, 0x7b, 0x38, 0x57, 0xe8, 0x24, 0x1a, 0x25, 0x4a, 0x47, 0x38, 0xde, 0x1b,
	0xd6, 0x69, 0x3e, 0xc6, 0xea, 0xf1, 0x33, 0xaf, 0xcc, 0x9f, 0xf1, 0x19, 0x83, 0x86, 0x12, 0x5e,
	0xf0, 0xff, 0xe9, 0x61, 0xf4, 0xcd, 0x86, 0xd0, 0x09, 0x32, 0x87, 0xea, 0x21, 0x16, 0x4e, 0x0b,
	0x7e, 0x46, 0x8b, 0xa9, 0x42, 0xec, 0x2d, 0x80, 0x8a, 0x82, 0x20, 0x92, 0x59, 0xec, 0xd7, 0xfc,
	0x82, 0x08, 0x15, 0x84, 0xf5, 0xe1, 0xc4, 0x58, 0x23, 0x91, 0x33, 0x6a, 0x5b, 0x1c, 0x72, 0xd5,
	0x42, 0x38, 0x2c, 0xdb, 0x5e, 0x16, 0xaa, 0x2d, 0x92, 0xdf, 0xeb, 0xad, 0x17, 0x71, 0x49, 0xe8,
	0x17, 0xf7, 0x56, 0x20, 0x76, 0x0b, 0x1d, 0x19, 0x0a, 0xb3, 0xc4, 0xc2, 0x62, 0x2f, 0x0e, 0xcc,
	0xa9, 0x4a, 0xca, 0xbd, 0x9d, 0x64, 0x8b, 0x38, 0x92, 0x5f, 0x70, 0xcd, 0x07, 0xf4, 0x9e, 0x2d,
	0x90, 0x57, 0x5d, 0xb4, 0x34, 0xc2, 0x67, 0x29, 0xf2, 0x97, 0x45, 0xf5, 0x09, 0xb8, 0xfe, 0x59,
	0x87, 0xde, 0xd7, 0xd2, 0x52, 0xff, 0x2e, 0x6d, 0x9b, 0x3c, 0xd5, 0x8f, 0xca, 0x53, 0xe3, 0xc8,
	0x3c, 0x9d, 0xec, 0xe4, 0xe9, 0x0a, 0xda, 0x3e, 0xd2, 0xe8, 0xbc, 0xd0, 0x49, 0x19, 0xb5, 0x2d,
	0xf0, 0xe4, 0x82, 0x56, 0xc5, 0x05, 0x77, 0xd0, 0x92, 0xd6, 0x78, 0x34, 0x9e, 0x9f, 0x92, 0xa9,
	0x5e, 0x6d, 0x42, 0x50, 0xd8, 0x6a, 0x86, 0x42, 0x61, 0x5a, 0x66, 0xa7, 0x64, 0xee, 0x2f, 0xa8,
	0x7d, 0xf4, 0x82, 0xe0, 0xaf, 0x0b, 0xea, 0xec, 0x2d, 0x68, 0xd1, 0xa4, 0x7f, 0xc6, 0xbb, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xc3, 0xed, 0x16, 0x57, 0x05, 0x00, 0x00,
}
